version: 0.2

phases:
  install:
    commands:
      - echo "CODEBUILD_SRC_DIR is $CODEBUILD_SRC_DIR"
      - AWS_ACCOUNT_ID=$(aws sts get-caller-identity --output json  | grep 'Account' | awk -F'"' '{print $(NF-1)}')
      - apt update && apt install jq -y
      - echo "Download needed softwares"
      - curl -o aws-iam-authenticator https://amazon-eks.s3-us-west-2.amazonaws.com/1.12.7/2019-03-27/bin/linux/amd64/aws-iam-authenticator
      - chmod +x ./aws-iam-authenticator
      - curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
      - chmod +x ./kubectl
      - mkdir -p /usr/local/bin && mv ./kubectl /usr/local/bin
      - mv ./aws-iam-authenticator /usr/local/bin
      - VERSION=$(aws ecr describe-images --repository-name $IMAGE_REPO_NAME --output json | jq '.imageDetails|sort_by(.imagePushedAt)[-1]|.imageTags|.[]' | sed -e 's/"//g')
      - "if [ ! -z $VERSION ]; then IMAGE_TAG=$(( VERSION + 1 )); else IMAGE_TAG=1; fi"
  pre_build:
    commands:
      - "mkdir -p ~/.kube/"
        #- "cp -vf kube.config ~/.kube/config"
      - echo Logging in to Amazon ECR...
      - aws ecr get-login-password --region $AWS_DEFAULT_REGION | docker login --username AWS --password-stdin $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com
      - echo "pre_build stage completed at $(date)"
  build:
    commands:
      - echo Build started on `date`
      - echo Building the Docker image...          
      - docker build -t $IMAGE_REPO_NAME:$IMAGE_TAG .
      - docker tag $IMAGE_REPO_NAME:$IMAGE_TAG $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG      
      - echo "build stage completed at $(date)"
  post_build:
    commands:
      - echo Build completed on `date`
      - echo Pushing the Docker image...
      - docker push $AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG 
        #- aws eks update-kubeconfig --name myEksTest --role-arn arn:aws:iam::342241566140:role/EksCodeBuildKubectlRole
      - aws eks update-kubeconfig --name $EKS_CLUSTER_NAME --role-arn $EKS_CODEBUILD_KUBECTL_ROLE_ARN
      - echo "Updating EKS Service.."
      - kubectl --record deployment/$EKS_DEPLOYMENT_NAME set image web-server-depl=$AWS_ACCOUNT_ID.dkr.ecr.$AWS_DEFAULT_REGION.amazonaws.com/$IMAGE_REPO_NAME:$IMAGE_TAG
      - echo "Deployment triggered successfully"
      - echo "post_build stage completed at $(date)"
